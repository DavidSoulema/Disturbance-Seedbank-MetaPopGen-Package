p_mean <- ggplot(df_summary, aes(x = Generation, y = Mean)) +
geom_line(color = "blue", linewidth = 1.2) +
geom_ribbon(data = df_summary, aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4,
show.legend = TRUE) +
scale_color_manual(values = c("Disturbance occurrence" = "indianred2")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(x = "Generations", y = "He", title = paste("Mean He with 95% CI for DRI =", DRI),
color = "", linetype = "") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "top"
)
ggsave(filename = file.path(DRI_dir, "He_mean.jpg"), plot = p_mean, width = 8, height = 6)
}
# Plot all He curves + mean + 95% CI
if (save.plots.summary==TRUE){
p_curves <- ggplot(df_plot, aes(x = Generation, y = He, group = Simulation)) +
geom_line(color = "lightgrey", alpha = 0.1, size = 0.3) +
geom_line(aes(y = Mean), color = "blue", size = 1) +
geom_ribbon(data = df_summary, aes(x = Generation, ymin = Lower, ymax = Upper),
inherit.aes = FALSE, alpha = 0.3, fill = "blue") +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4,
show.legend = TRUE) +
scale_color_manual(values = c("Disturbance occurrence" = "indianred2")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(x = "Generations", y = "He", title = paste("DRI =", DRI),
color = "", linetype = "") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "top"
)
ggsave(filename = file.path(DRI_dir, "He_curves.jpg"), plot = p_curves, width = 8, height = 6)
}
# Plot all the curves for each DRI in a mosaic
if(save.global.curves==TRUE){
p <- ggplot(df_plot, aes(x = Generation)) +
geom_line(aes(y = He, group = Simulation), color = "lightgrey", alpha = 0.1, linewidth = 0.3) +
geom_ribbon(data = df_summary, aes(ymin = Lower, ymax = Upper), fill = "blue", alpha = 0.3) +
geom_line(aes(y = Mean), color = "blue", linewidth = 1) +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4, show.legend = FALSE) +
scale_color_manual(values = c("Disturbance occurrence" = "red")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(title = paste("DRI =", DRI), x = "Generations", y = "He") +
coord_cartesian(ylim = y_lim) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "none")
plots <- append(plots,list(p))
}
# Plot He_box.jpg (boxplot of last generation)
if (save.individual.box==TRUE){
last_gen_values <- He_all_matrix[T_total, ]
df_box <- data.table(DRI = as.factor(DRI), He = last_gen_values)
p_box <- ggplot(df_box, aes(x = DRI, y = He)) +
geom_boxplot(fill = "skyblue") +
labs(x = "", y = "He", title = paste("He Boxplot at last generation for DRI =", DRI)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = file.path(DRI_dir, "He_box.jpg"), plot = p_box, width = 6, height = 4)
}
# END OF DRI LOOP : back to Global Experiment repository
}
##########################################
# Save the global results (statistics, curves and box plot)
##########################################
### He statistics for each DRI
csv_file <- file.path(base_dir, "He_statistics_final.csv")
write.csv(df_table, csv_file, row.names = FALSE, na = "")
mean_he_vector <- as.numeric(df_table[df_table$DRI == "mean He", -1])
names(mean_he_vector) <- colnames(df_table)[-1]
summary_He <- data.frame(
DRI = as.numeric(names(mean_he_vector)),
He_mean = mean_he_vector
)
# Perform statistical analyses
He_control <- summary_He$He_mean[summary_He$DRI == 0] # the DRI=0 has to be treated separately because there is no disturbance return value that can be used in the statistical comparison
He_treatment <- summary_He$He_mean[summary_He$DRI != 0]
t_test_result <- t.test(He_treatment, mu = He_control)
lm_result <- lm(He_mean ~ DRI, data = summary_He[summary_He$DRI != 0, ])
results_summary <- data.frame(
test = c("t-test", "linear_regression"),
estimate = c(t_test_result$estimate, coef(lm_result)[2]),
p_value = c(t_test_result$p.value, summary(lm_result)$coefficients[2, 4]),
conf_low = c(t_test_result$conf.int[1], confint(lm_result)[2, 1]),
conf_high = c(t_test_result$conf.int[2], confint(lm_result)[2, 2])
)
write.csv(results_summary, "summary_statistics.csv", row.names = FALSE)
#---------
## Global He_box.jpg for all DRI
if (save.global.boxes==TRUE){
box_data <- rbindlist(lapply(DRI_values, function(DRI) {
df <- fread(file.path(base_dir, paste0("Experiment_DRI_", DRI), "He_all.csv"))
T_total_local <- nrow(df)
He_vals <- df[T_total_local, ]
melt(data.table(DRI = as.factor(DRI), t(He_vals)),
id.vars = "DRI",
measure.vars = patterns("^V"),
value.name = "He")
}))
p_final_box <- ggplot(box_data, aes(x = DRI, y = He)) +
geom_boxplot(fill = "lightgreen") +
labs(x = "Disturbance Return Interval (DRI)", y = "He") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = file.path(base_dir, "He_boxes.jpg"), plot = p_final_box, width = 10, height = 6)
}
#---------
## Global He_curves.jpg for all DRI
if (save.global.curves==TRUE){
plots_grid <- arrangeGrob(grobs = plots, ncol = n_cols)
# Create legend plot for curve descriptions
legend_grid <- ggplot() +
geom_line(data = data.frame(x = 1:4, y = 1:4),
aes(x = x, y = y, color = "Individual He     ")) +  # Ajout d'espaces
geom_line(data = data.frame(x = 1:4, y = 2:5),
aes(x = x, y = y, color = "Mean He"), size = 1) +
geom_ribbon(data = data.frame(x = 1:4, ymin = 0.8, ymax = 1.2),
aes(x = x, ymin = ymin, ymax = ymax, fill = "95% CI"), alpha = 0.3) +
geom_vline(aes(xintercept = 2, linetype = "Disturbance occurrence"), color = "red") +
scale_color_manual(values = c("Individual He     " = "lightgrey", "Mean He" = "blue")) +
scale_fill_manual(values = c("95% CI" = "blue")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
guides(
color = guide_legend(order = 1, override.aes = list(size = 2)),
fill = guide_legend(order = 2),
linetype = guide_legend(order = 3)
) +
coord_cartesian(xlim = c(0, 0.1), ylim = c(0, 0.1), clip = "off") +
theme_void() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.spacing.x = unit(1.2, "cm"),
plot.margin = margin(0, 0, 0, 0)
)
final_plot <- arrangeGrob(
plots_grid,
legend_grid,
ncol = 1,
heights = unit.c(unit(0.92, "npc"), unit(0.08, "npc"))
)
ggsave(
filename = file.path(base_dir, "He_grid.jpg"),
plot = final_plot,
width = 12,
height = 10,
units = "in",
dpi = 300
)
}
#############################################
### 9. EXPERIMENT
#############################################
# The aim of this experiment was to study the impact of different Disturbance Return Interval (DRI) on Heterozygosity (He) through time.
# A 1000 simulations have been run for each different DRI.
# Data saved was only the global He (across the whole population) for each time step and each simulation (He_all.csv).
# One folder was created for each DRI, in which each simulation had a associated sub-folder.
# Plots created were:
# - all He curves (individual, mean and 95% CI) in a single plot for each DRI
# - a mosaic of these plots a one single image
# - a box plot with the statistical distribution of the 1000 simulations for each DRI
# YOU CAN CHANGE THE PARAMETERS BELOW AND CHOOSE WHAT YOU WANT TO RUN AND SAVE
##########################################
# Required packages
##########################################
library(data.table)  # For efficient data manipulation
library(ggplot2)     # For advanced plotting
library(scales)      # For formatting axes in ggplot
library(gridExtra)
library(grid)
##########################################
# Initialization
##########################################
# Setup base directory with timestamp
base_dir <- paste0("Experiment_", format(Sys.time(), "%Y_%m_%d_%H_%M_%S"))
dir.create(base_dir)
save(N1, file = file.path(base_dir, "N1.Rdata"))
save(SB1, file = file.path(base_dir, "SB1.Rdata"))
# This script only works for save.res=F
if (save.res==T) print("WARINING: save.res is set to TRUE. This script only works for save.res=FALSE for data saving structure reasons. The experiment will be run for save.res=FALSE instead.")
# Range of DRI values
DRI_values <- c(1:10, 20, 100, 0)
# .csv file to get the numerical He values
table_matrix <- matrix(NA, nrow = 3, ncol = length(DRI_values))
rownames(table_matrix) <- c("mean He", "upper He", "lower He")
colnames(table_matrix) <- as.character(DRI_values)
df_table <- data.frame(DRI = rownames(table_matrix), table_matrix, check.names = FALSE)
# Number of simulations per DRI value
Sim <- 3
# Data to save
save.N = FALSE
save.SB = FALSE
save.details = FALSE          #details of N and SB among demes and age classes. Set TRUE only if the 2 above are also TRUE
save.plots.separated = FALSE  #curves of He over time, in separated images
save.plots.summary = TRUE     #curves of He over time, in a single image
save.individual.box = FALSE   #individual boxplot for each simulation
save.global.boxes = TRUE     #all boxplots combined
save.global.curves = TRUE     #all curves combined in a mosaic
#To plot the global.curves in a mosaic (setup)
plots <- list()
n_cols <- 4             #number of column in the mosaic
y_lim = c(0.40, 0.51)   #limit of y-axis
##########################################
# Simulation for each Disturbance Return Interval (DRI)
##########################################
# Loop over each DRI value
for (DRI in DRI_values) {
print(paste0("DRI = ", DRI))
# Create directory for current DRI
DRI_dir <- file.path(base_dir, paste0("Experiment_DRI_", DRI))
dir.create(DRI_dir)
# Generate the disturbance vector
disturbance_vector <- get_disturbance_vector(T_max,
generation_time,
stable_state_time=0,
disturbance_return_interval=DRI,
final_time_since_disturbance = 1)
T_total <- length(disturbance_vector)
# To store He.csv files together
He_all_matrix <- matrix(NA, nrow = T_total, ncol = Sim)
for (sim in 1:Sim) {
sim_dir <- file.path(DRI_dir, paste0("Simulation_", sim))
dir.create(sim_dir)
# Run simulation
print(paste0("Running simulation: ", sim))
res <- sim.DISTURBANCE.metapopgen.monoecious(input.type, demographic.data,
N1,
SB1,
sigma,
phi_F, phi_M,
fec.distr_F = "poisson", fec.distr_M = "poisson",
mu,
migration="forward", migr=NULL,
delta,
recr.dd="settlers",
kappa0,
psi,
gamma,
seed_life_expectancy,
degeneration_type = "linear",
T_max, #time of the disturbed simulation (it would be the one of the original function)
simulation_vector = disturbance_vector,
save.res=F, save.res.T = seq(1,T_max),
verbose=F)
N <- res$N  # m*n*z*T_total array
SB <- res$SB  # T_total*m*n array
# Save N and SB arrays
if (save.N==TRUE) save(N, file = file.path(sim_dir, "N.Rdata"))
if (save.SB==TRUE) save(SB, file = file.path(sim_dir, "SB.Rdata"))
###-----------------------
# Generate and save CSVs
###-----------------------
if (save.details==TRUE){
# ---- N_deme.csv (sum over z)
N_deme <- lapply(1:dim(N)[2], function(n) {
mat <- apply(N[,n, , , drop = FALSE], c(1, 4), sum)
colnames(mat) <- NULL
mat
})
N_deme_df <- rbindlist(lapply(N_deme, as.data.table), fill = TRUE, idcol = "deme")
fwrite(N_deme_df, file.path(sim_dir, "N_deme.csv"))
# ---- N_age.csv (sum over n)
N_age <- lapply(1:dim(N)[3], function(z) {
mat <- apply(N[, ,z, , drop = FALSE], c(1, 4), sum)
colnames(mat) <- NULL
mat
})
N_age_df <- rbindlist(lapply(N_age, as.data.table), fill = TRUE, idcol = "age_class")
fwrite(N_age_df, file.path(sim_dir, "N_age.csv"))
# ---- SB_deme.csv (same as N_deme, using SB)
SB_deme <- lapply(1:dim(SB)[3], function(n) {
mat <- t(SB[, , n])  # transpose to T_total*m
colnames(mat) <- NULL
mat
})
SB_deme_df <- rbindlist(lapply(SB_deme, as.data.table), fill = TRUE, idcol = "deme")
fwrite(SB_deme_df, file.path(sim_dir, "SB_deme.csv"))
}
# ---- He and Na metrics
He <- get_He_global_over_time(N)
"Na <- get_Na_global_over_time(N)"
fwrite(data.table(He = He), file.path(sim_dir, "He.csv"))
'fwrite(data.table(Na = Na), file.path(sim_dir, "Na.csv"))'
He_all_matrix[, sim] <- He
}
########
# Main file of interest:
# Save He_all.csv
fwrite(as.data.table(He_all_matrix), file.path(DRI_dir, "He_all.csv"))
########
###-----------------------
# Generate and save Plots
###-----------------------
# Plot He_all.jpg
# Prepare data: melt matrix to long format for ggplot
df_plot <- melt(as.data.table(He_all_matrix), id.vars = NULL,
variable.name = "Simulation", value.name = "He")
df_plot[, Generation := rep(1:T_total, Sim)]
# Compute the mean He per generation
df_plot[, Mean := ave(He, Generation, FUN = mean)]
# Create data frame for disturbance lines
disturbance_indices <- which(disturbance_vector != 0)
disturbance_df <- if (length(disturbance_indices) > 0) {
data.frame(x = disturbance_indices,
type = "Disturbance occurrence")
} else {
data.frame(x = numeric(0),
type = character(0))
}
# Compute the statistical data
He_mean <- rowMeans(He_all_matrix)
He_sd <- apply(He_all_matrix, 1, sd)
error_margin <- qnorm(0.975) * He_sd / sqrt(Sim)
lower <- He_mean - error_margin
upper <- He_mean + error_margin
df_summary <- data.table(Generation = 1:T_total, Mean = He_mean, Lower = lower, Upper = upper)
# Save it in the .csv file
DRI_col <- as.character(DRI)
df_table[df_table$DRI == "mean He", DRI_col] <- tail(He_mean, 1)
df_table[df_table$DRI == "lower He", DRI_col] <- tail(lower, 1)
df_table[df_table$DRI == "upper He", DRI_col] <- tail(upper, 1)
if (save.plots.separated==TRUE){
# Plot  all individual He curves + mean
p_all <- ggplot(df_plot, aes(x = Generation, y = He, group = Simulation)) +
geom_line(color = "lightgrey", alpha = 0.1, size = 0.3) +  # individual curves
geom_line(aes(y = Mean), color = "blue", size = 1) +     # mean curve
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4,
show.legend = TRUE) +
scale_color_manual(values = c("Disturbance occurrence" = "indianred2")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(x = "Generations", y = "He", title = paste("All He curves for DRI =", DRI),
color = "", linetype = "") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "top"
)
ggsave(filename = file.path(DRI_dir, "He_all.jpg"), plot = p_all, width = 8, height = 6)
# Plot mean He + 95% CI
p_mean <- ggplot(df_summary, aes(x = Generation, y = Mean)) +
geom_line(color = "blue", linewidth = 1.2) +
geom_ribbon(data = df_summary, aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4,
show.legend = TRUE) +
scale_color_manual(values = c("Disturbance occurrence" = "indianred2")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(x = "Generations", y = "He", title = paste("Mean He with 95% CI for DRI =", DRI),
color = "", linetype = "") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "top"
)
ggsave(filename = file.path(DRI_dir, "He_mean.jpg"), plot = p_mean, width = 8, height = 6)
}
# Plot all He curves + mean + 95% CI
if (save.plots.summary==TRUE){
p_curves <- ggplot(df_plot, aes(x = Generation, y = He, group = Simulation)) +
geom_line(color = "lightgrey", alpha = 0.1, size = 0.3) +
geom_line(aes(y = Mean), color = "blue", size = 1) +
geom_ribbon(data = df_summary, aes(x = Generation, ymin = Lower, ymax = Upper),
inherit.aes = FALSE, alpha = 0.3, fill = "blue") +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4,
show.legend = TRUE) +
scale_color_manual(values = c("Disturbance occurrence" = "indianred2")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(x = "Generations", y = "He", title = paste("DRI =", DRI),
color = "", linetype = "") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "top"
)
ggsave(filename = file.path(DRI_dir, "He_curves.jpg"), plot = p_curves, width = 8, height = 6)
}
# Plot all the curves for each DRI in a mosaic
if(save.global.curves==TRUE){
p <- ggplot(df_plot, aes(x = Generation)) +
geom_line(aes(y = He, group = Simulation), color = "lightgrey", alpha = 0.1, linewidth = 0.3) +
geom_ribbon(data = df_summary, aes(ymin = Lower, ymax = Upper), fill = "blue", alpha = 0.3) +
geom_line(aes(y = Mean), color = "blue", linewidth = 1) +
geom_vline(data = disturbance_df,
aes(xintercept = x, linetype = type, color = type),
alpha = 0.4, show.legend = FALSE) +
scale_color_manual(values = c("Disturbance occurrence" = "red")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
labs(title = paste("DRI =", DRI), x = "Generations", y = "He") +
coord_cartesian(ylim = y_lim) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, vjust = 1),
legend.position = "none")
plots <- append(plots,list(p))
}
# Plot He_box.jpg (boxplot of last generation)
if (save.individual.box==TRUE){
last_gen_values <- He_all_matrix[T_total, ]
df_box <- data.table(DRI = as.factor(DRI), He = last_gen_values)
p_box <- ggplot(df_box, aes(x = DRI, y = He)) +
geom_boxplot(fill = "skyblue") +
labs(x = "", y = "He", title = paste("He Boxplot at last generation for DRI =", DRI)) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = file.path(DRI_dir, "He_box.jpg"), plot = p_box, width = 6, height = 4)
}
# END OF DRI LOOP : back to Global Experiment repository
}
##########################################
# Save the global results (statistics, curves and box plot)
##########################################
### He statistics for each DRI
csv_file <- file.path(base_dir, "He_statistics_final.csv")
write.csv(df_table, csv_file, row.names = FALSE, na = "")
mean_he_vector <- as.numeric(df_table[df_table$DRI == "mean He", -1])
names(mean_he_vector) <- colnames(df_table)[-1]
summary_He <- data.frame(
DRI = as.numeric(names(mean_he_vector)),
He_mean = mean_he_vector
)
# Perform statistical analyses
He_control <- summary_He$He_mean[summary_He$DRI == 0] # the DRI=0 has to be treated separately because there is no disturbance return value that can be used in the statistical comparison
He_treatment <- summary_He$He_mean[summary_He$DRI != 0]
t_test_result <- t.test(He_treatment, mu = He_control)
lm_result <- lm(He_mean ~ DRI, data = summary_He[summary_He$DRI != 0, ])
results_summary <- data.frame(
test = c("t-test", "linear_regression"),
estimate = c(t_test_result$estimate, coef(lm_result)[2]),
p_value = c(t_test_result$p.value, summary(lm_result)$coefficients[2, 4]),
conf_low = c(t_test_result$conf.int[1], confint(lm_result)[2, 1]),
conf_high = c(t_test_result$conf.int[2], confint(lm_result)[2, 2])
)
test_file <- file.path(base_dir, "summary_statistics.csv")
write.csv(results_summary, test_file, row.names = FALSE)
#---------
## Global He_box.jpg for all DRI
if (save.global.boxes==TRUE){
box_data <- rbindlist(lapply(DRI_values, function(DRI) {
df <- fread(file.path(base_dir, paste0("Experiment_DRI_", DRI), "He_all.csv"))
T_total_local <- nrow(df)
He_vals <- df[T_total_local, ]
melt(data.table(DRI = as.factor(DRI), t(He_vals)),
id.vars = "DRI",
measure.vars = patterns("^V"),
value.name = "He")
}))
p_final_box <- ggplot(box_data, aes(x = DRI, y = He)) +
geom_boxplot(fill = "lightgreen") +
labs(x = "Disturbance Return Interval (DRI)", y = "He") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = file.path(base_dir, "He_boxes.jpg"), plot = p_final_box, width = 10, height = 6)
}
#---------
## Global He_curves.jpg for all DRI
if (save.global.curves==TRUE){
plots_grid <- arrangeGrob(grobs = plots, ncol = n_cols)
# Create legend plot for curve descriptions
legend_grid <- ggplot() +
geom_line(data = data.frame(x = 1:4, y = 1:4),
aes(x = x, y = y, color = "Individual He     ")) +  # Ajout d'espaces
geom_line(data = data.frame(x = 1:4, y = 2:5),
aes(x = x, y = y, color = "Mean He"), size = 1) +
geom_ribbon(data = data.frame(x = 1:4, ymin = 0.8, ymax = 1.2),
aes(x = x, ymin = ymin, ymax = ymax, fill = "95% CI"), alpha = 0.3) +
geom_vline(aes(xintercept = 2, linetype = "Disturbance occurrence"), color = "red") +
scale_color_manual(values = c("Individual He     " = "lightgrey", "Mean He" = "blue")) +
scale_fill_manual(values = c("95% CI" = "blue")) +
scale_linetype_manual(values = c("Disturbance occurrence" = "dotted")) +
guides(
color = guide_legend(order = 1, override.aes = list(size = 2)),
fill = guide_legend(order = 2),
linetype = guide_legend(order = 3)
) +
coord_cartesian(xlim = c(0, 0.1), ylim = c(0, 0.1), clip = "off") +
theme_void() +
theme(
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 16),
legend.spacing.x = unit(1.2, "cm"),
plot.margin = margin(0, 0, 0, 0)
)
final_plot <- arrangeGrob(
plots_grid,
legend_grid,
ncol = 1,
heights = unit.c(unit(0.92, "npc"), unit(0.08, "npc"))
)
ggsave(
filename = file.path(base_dir, "He_grid.jpg"),
plot = final_plot,
width = 12,
height = 10,
units = "in",
dpi = 300
)
}
